<?xml version="1.0" encoding="UTF-8"?>
<!-- 스프링 설정 
	xmlns뒤에 :beans처럼 이름이 안붙으면 접두사를 안붙이고 사용할 수 있다.
	단 하나만 지정할 수 있음.
-->
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 하위폴더 모두를 경로로 지정하려면 /teacher/** 별 두개! -->
	<!-- access 권한을 줄때 사용자를 하나하나 추가하기 어렵다. 그룹을 만들어서 권한을 주는 형식으로 한다. ROLE_사용자명 -->
	<http auto-config="true">
		<intercept-url pattern="/teacher/**" access="hasRole('ROLE_TEACHER')" />
	</http>
	
	<!-- 인증에 사용될 유저 정보 : 1.사용자정보를 직접 넣는 방법 2.jdbc같은 데이터를 이용하는 방법 3.서버가 갖고있는 사용자정보를 꺼내오는 방법-->
	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt"/> <!-- 암호화 방법 -->
			<user-service>
				<user name="newlec" password="$2a$10$zpE1ThBwaRlZM2uMMShksurhrRjw/QtUZXB4cfON4.owLTFqkyQx." authorities="ROLE_STUDENT, ROLE_TEACHER"/>
				<user name="dragon" password="{nooop}111" authorities="ROLE_STUDENT"/>
				<!-- dragon은 student로 인증은 되지만 teacher에 대한 권한은 없다. 403 에러 -->
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
